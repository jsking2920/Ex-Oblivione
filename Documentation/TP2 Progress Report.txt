TP2 Progress Report

-fov polishing
-made it so that the player can only see entities within fov including stairs
-only explored tiles and tiles within sight are drawn now
-fixed movement crash by adding a check to make a player doesn't try to move out of bounds
-altered bsp dungeon gen to leave a border of one tile around the console 
-fixed bug causing floors to be drawn on top of eachother
-implemented monsters/placed at random/cant be moved through/different amounts and colors and characters and stats based on floor
-fixed bug with monsters not blocking movement properly
-fixed bug preventing movement on bottom edge of screen
-added ability to use alphanumeric keys for input
-added WASD Movement and diagonel movement
-implemented game states and turns between player and monsters
-started working on subclasses for entities that can fight/gave players and monsters stats and abilities
-researched a* pathfinding algorithm
-completely reworked stairs as a subclass of entity/each floor stores a stairs object
-added depth to game_map to keep track of floor player is on/reworked how taking stairs works
-lots of bug fixing/refactoring/renaming
-added check while placing the stairs to make sure they are sufficently far from player and check to make sure enemies aren't placed on top of other entities
-researched random walk algorithm
-implemented random walk algorithm/debugged
-removed some redundant if statements
-made sure that random walk alg always leave a border of wall tiles
-implemented function that places enemies in random walk floors


-changed random walk so that it can go over the same tile twice. this makes it faster and prevents crashes and also makes it more random.
-implemented ability to show the whole map regardless of fov for demo and debug purposes
-gave entities names, gave each kind of floor a named variety of enemy
-added the ability to wait in place
-added in the ability to die and lose/enemy corpses
-monsters can attack diagonally now
-added in ability to win if player makes it through 3 floors 
-implemented basic pathfinding algorithm
-implemented breadth first search (Dijkstraâ€™s with all weights being 1) pathfinding algorithm
-fixed bugs with pathfinding/added diagonal movement
-moved pathfinding functions out side of the enemy class to be used for other things
-made bfs pathfinding more efficent by using a deque for the nodes to be visited and a dictionary for the visited nodes
-made it so bfs algorithm returns just the starting point if no path is found so enemies will stay in place if they can't reach the player








ideas/to do
----------------------------
a star alg
move restart into a pause menu
tweak monster/stairs placement alg
change stair placement to be far away from player/make it so stairs arent in hallways
make it so stairs make sense, can be gone back up
add names/identification for enemies/change characters/colors/make them random/random chance of different kinds
cellular automata
add parameters to affect the way random walk works
all functions that use map_width should just use self.width and similar
render order
ability to mouse over things to inspect/draws a path with highlighting (djikstras)
proper message log
better pathfinding with smoother movement/no weird diagonal moves/hueristics
traps
items